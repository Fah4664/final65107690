import 'package:flutter/material.dart';
import '../helpers/database_helper.dart';
import '../models/plant.dart';

class EditPlantScreen extends StatefulWidget {
  final Plant plant;
  final VoidCallback onPlantUpdated;

  EditPlantScreen({required this.plant, required this.onPlantUpdated});

  @override
  _EditPlantScreenState createState() => _EditPlantScreenState();
}

class _EditPlantScreenState extends State<EditPlantScreen> {
  final _formKey = GlobalKey<FormState>();
  late TextEditingController _nameController;
  late TextEditingController _scientificNameController;
  late TextEditingController _imageUrlController;
  late TextEditingController _descriptionController;

  @override
  void initState() {
    super.initState();
    _nameController = TextEditingController(text: widget.plant.name);
    _scientificNameController = TextEditingController(text: widget.plant.scientificName);
    _imageUrlController = TextEditingController(text: widget.plant.imageUrl);
    _descriptionController = TextEditingController(text: widget.plant.description);
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Edit Plant'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Form(
          key: _formKey,
          child: Column(
            children: [
              TextFormField(
                controller: _nameController,
                decoration: const InputDecoration(labelText: 'Name'),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Please enter the name';
                  }
                  return null;
                },
              ),
              TextFormField(
                controller: _scientificNameController,
                decoration: const InputDecoration(labelText: 'Scientific Name'),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Please enter the scientific name';
                  }
                  return null;
                },
              ),
              TextFormField(
                controller: _imageUrlController,
                decoration: const InputDecoration(labelText: 'Image URL'),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Please enter the image URL';
                  }
                  return null;
                },
              ),
              TextFormField(
                controller: _descriptionController,
                decoration: const InputDecoration(labelText: 'Description'),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Please enter a description';
                  }
                  return null;
                },
              ),
              const SizedBox(height: 20),
              ElevatedButton(
                onPressed: () async {
                  if (_formKey.currentState!.validate()) {
                    final updatedPlant = Plant(
                      id: widget.plant.id,
                      name: _nameController.text,
                      scientificName: _scientificNameController.text,
                      imageUrl: _imageUrlController.text,
                      description: _descriptionController.text,
                    );
                    await DatabaseHelper().updatePlant(updatedPlant);
                    widget.onPlantUpdated();
                    Navigator.pop(context);
                  }
                },
                child: const Text('Update Plant'),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
